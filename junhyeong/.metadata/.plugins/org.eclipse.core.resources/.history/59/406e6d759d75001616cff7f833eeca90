package linearlist;

public class Poly {
	private int degree;
	private double[] coef;
	
	public Poly(){
		
	}
	
	public Poly(int degree, double[] coef){
		this.degree = degree;
		this.coef = coef;
	}
	
	public int getDegree(){
		return degree;
	}
	
	public double[] getCoef(){
		return coef;
	}
	//두 다항식을 더하는 함수
	public Poly addPoly(Poly poly1, Poly poly2){
		int dif = poly1.degree - poly2.degree;
		Poly setSizedPoly = new Poly();
		Poly newPoly = new Poly();
		
		if(dif > 0){
			setSizedPoly = fillZero(dif, poly2);
			for(int i = 0; i < poly1.degree ; i++){
				//newPoly.coef[i] = poly1.coef[i] + setSizedPoly.coef[i];
			}	
		}		
		else if(dif < 0){
			setSizedPoly = fillZero((-1 * dif), poly1);
			for(int i = 0; i < poly2.degree ; i++){
				newPoly.coef[i] = setSizedPoly.coef[i] + poly2.coef[i];
			}
		}
		else{
			for(int i = 0; i < poly2.degree ; i++){
				newPoly.coef[i] = poly1.coef[i] + poly2.coef[i];
			}
		}
		return newPoly;
	}
	
	//차이만큼 0을 채우는 함수
	public Poly fillZero(int dif, Poly poly){
		int newDegree = poly.coef.length + dif;
		Poly newPoly = new Poly(newDegree, poly.coef);
		System.out.println("dif = " + dif);
		//2
		System.out.println("newDegree = " + newDegree);
		//6
		
		for(int i = 0; i < dif; i++){
			newPoly.coef[i] = 0;
		}
		for(int i = dif; i < newDegree; i++){
			System.out.println("newDegree = " + i + ":"+ newDegree);

			newPoly.coef[i] = poly.coef[i - dif];
			System.out.println("newPoly.coef = " + newPoly.coef[i]);

		}
		return newPoly;
	}
	
}
