/**
 * 
 */
package sta;


/**
 * @author yenos
 * @date 2016. 9. 4.
 */
public class Stack {

	class Node {
		String data;
		Node next;
	}

	Node top = null;

	public void push(String data) {
		Node tmp = new Node();
		tmp.data = data;
		if (top == null) {
			top.next = tmp;
		} else {

		}
	}

	//
	// private int stackSize = 0;
	// String[] arr = new String[stackSize];
	private int STACK_SIZE = 0;
	String[] arrStack;

	// stack Arr를 만든다.
	public String[] makeAddStackArr() {
		if(arrStack !=null){
			
			String [] arrNew = new String[++STACK_SIZE];
			for(int i=0;i<arrStack.length;i++){
				arrNew[i] = arrStack[i];
			}
			
			return arrNew;
		}else{
			return new String[++STACK_SIZE];	
		}		
	}
	
	public String[] makeMinuStackArr(){
		//널이아니면 무조건 한개 이상 존재 
		if(arrStack !=null){
			//사이즈하나줄이고 
			String [] arrNew = new String[--STACK_SIZE];

			//줄인상태로 다 채워넣고  
			for(int i=0;i<STACK_SIZE;i++){
				arrNew[i] = arrStack[i];
			}
			return arrNew;		
		}else{
			throwing("index out of Range!!!");
		}
		
	}

	//push
	public void arrPush(String data) {
		arrStack = makeAddStackArr();
		arrStack[STACK_SIZE - 1] = data;
	}
	//isEmpty
	public boolean isEmpt(){
		return STACK_SIZE == 0 ? true : false ;
	}
	
	public void arrPop(){
		arrStack[STACK_SIZE-1] = null;
		
	}
	
	public void arrShowAllStack(){
		for(int i=0;i<arrStack.length;i++){
			System.out.println("stack val ==> "+arrStack[i]);
		}
	}

	class PkCustomException extends Exception {
		public PkCustomException(String message) {
			super(message);
		}
	}

	public void throwing(String msg) {
		try {
			throw new PkCustomException(msg);
		} catch (PkCustomException e) {
			e.printStackTrace();
		}
	}
}
