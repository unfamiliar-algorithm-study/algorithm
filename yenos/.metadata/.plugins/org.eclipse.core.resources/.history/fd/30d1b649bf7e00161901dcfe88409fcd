/**
 * 
 */
package sort;

/**
 * @author yenos
 * @date 2016. 9. 19. 정렬을 구현해봅시다!
 */
public class Sort {

	public int[] selectionSort(int arr[]) {
		int arrLen = arr.length;
		int smallestIndex = 0;

		for (int i = 0; i < arrLen; i++) {
			// 검색한결과가 기준벨류보다 작으면
			// 작은벨류를 계속바꿔준다.

			// 첫번쨰 포문
			// 총 배열의 갯수만큼 돌아야한다.
			int standardValue = arr[i];
			// System.out.println("set StandardValue=>"+standardValue);

			// 두번째 포문
			// arrLen arrLen-1, arrLen-2... 이렇게 진행.
			for (int j = i; j < arrLen; j++) {

				if (standardValue >= arr[j]) {
					standardValue = arr[j];
					smallestIndex = j;
				}

				if (j == arrLen - 1) {
					int tmp;
					// //탬프에 값을 넣어주고
					tmp = arr[i];
					// //기준엔 가장 작은 값을 넣고.
					arr[i] = arr[smallestIndex];
					// //기존꺼 바꾸기.
					arr[smallestIndex] = tmp;
					// //언사이즈를 ++ 해주고

				}

			}

		}

		return arr;
	}

	public int[] bubbleSort(int arr[]) {
		int arrLen = arr.length;

		for (int i = 0; i < arrLen; i++) {

			// 매번 마지막까지 된다.
			for (int j = 0; j < arrLen - i; j++) {

				// 앞에것이 더크다면 바꿔준다.
				if (j + 1 < arrLen - i) {
					if (arr[j] > arr[j + 1]) {
						int tmp;
						tmp = arr[j];
						arr[j] = arr[j + 1];
						arr[j + 1] = tmp;
					}
				}
			}
		}
		return arr;
	}

	public int[] insertSort(int arr[]) {
		int arrLen = arr.length;

		// 모든요소를 검색하기위한포무
		for (int i = 0; i < arrLen; i++) {
			int tmp;

			// 앞에 정렬된 배열에서 비교하는 부분.(앞쪽 포문)
			for (int j = i; j > 0; j--) {
				if (arr[j] < arr[j - 1]) {
					tmp = arr[j];
					arr[j] = arr[j - 1];
					arr[j - 1] = tmp;
				}

			}
		}

		return arr;
	}

	public int[] quicksort(int arr[], int begin, int end) {
		if (begin < end) {
			int p = partion(arr, begin, end);

			quicksort(arr, begin, p - 1);
			quicksort(arr, p + 1, end);
		}
		return arr;
	}

	public int partion(int arr[], int begin, int end) {

		int pivot = arr[begin];
		int i = begin;
		int j = end + 1;
		do {
			do {
				i = i + 1;
			} while (i <= end && arr[i] < pivot);
			do {
				j = j - 1;
			} while (arr[j] > pivot);

		} while (i < j);

		int tmp;
		tmp = arr[begin];
		arr[begin] = arr[j];
		arr[j] = tmp;

		return j;

	}

}
