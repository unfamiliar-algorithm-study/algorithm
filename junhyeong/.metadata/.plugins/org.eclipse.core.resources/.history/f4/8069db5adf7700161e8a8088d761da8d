package binarysearchtree;

import java.util.Scanner;

public class Main {
	public static void main(String[] args){
		int value;
		BinarySearchTree bst_char = new BinarySearchTree();
		BinarySearchTree bst_number = new BinarySearchTree();
		
		bst_char.insertBST('G');
		bst_char.insertBST('I');
		bst_char.insertBST('H');
		bst_char.insertBST('D');
		bst_char.insertBST('B');
		bst_char.insertBST('M');
		bst_char.insertBST('N');
		bst_char.insertBST('A');
		bst_char.insertBST('J');
		bst_char.insertBST('E');
		bst_char.insertBST('Q');
	
		bst_char.delete('A');
		
		Scanner sc = new Scanner(System.in);
		value = sc.nextInt();
		
		System.out.println("Binary Tree >>>");
		bst_char.printBST(value);
		
		System.out.println("Is There \"A\" ?>>> ");
		TreeNode p1 = bst_char.searchBST('A');
		
		if(p1!= null){
			System.out.println(p1.data + "탐색 성공");
		} else{
			System.out.println("탐색 실패");
		}
		
		System.out.println("Is There \"E\" ?>>> ");
		TreeNode p2 = bst_char.searchBST('E');
		
		if(p2!= null){
			System.out.println(p2.data + " 탐색 성공");
		} else{
			System.out.println("탐색 실패");
		}
	}
}
